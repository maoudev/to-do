---
import CardTask from "../components/CardTask.astro";
import Layout from "../layouts/Layout.astro";
import { isLoggedIn } from "../services/auth";
import { GetTasks } from "../services/task";
import type { APITaskResponse } from "../types/api";

let jwtToken: string = "";
let secretKey: string = "";

if (Astro.cookies.has("jwt_token") && Astro.cookies.has("user_id")) {
  jwtToken = Astro.cookies.get("jwt_token")?.value as string;
  secretKey = import.meta.env.SECRET_KEY;

  if (!isLoggedIn(jwtToken, secretKey)) {
    Astro.cookies.delete("jwt_token");
    Astro.cookies.delete("user_id");

    return Astro.redirect("/login");
  }
} else {
  return Astro.redirect("/login");
}

const res = await GetTasks(jwtToken);

if (res.status != 200) {
  return Astro.redirect("/404");
}

const tasks = (await res.json()) as APITaskResponse[];

const activos = tasks.filter((task) => task.Active == true);
const innactivos = tasks.filter((task) => task.Active == false);
---

<Layout title="TaskSync">
  <main class="">
    <div class="mx-7 my-4 w-fit">
      <a class="" href="task/add"
        ><img
          class="w-6 hover:scale-110 dark:invert"
          src="/mas.png"
          alt="Add icon"
        /></a
      >
    </div>

    <div class="mx-auto">
      <h2
        class="my-2 text-center tracking-widest text-lg font-bold text-black dark:text-white lg:text-2xl"
      >
        Tareas pendientes
      </h2>
      <div class="">
        {
          activos.map((task) => (
            <CardTask
              id={task.ID}
              name={task.name}
              description={task.description}
              active={task.Active}
            />
          ))
        }
      </div>
    </div>

    <div class="mx-auto my-20">
      <h2
        class="my-2 text-center tracking-widest text-lg font-bold text-black dark:text-white lg:text-2xl"
      >
        Tareas Finalizadas
      </h2>
      <div>
        {
          innactivos.map((task) => (
            <CardTask
              id={task.ID}
              name={task.name}
              description={task.description}
              active={task.Active}
            />
          ))
        }
      </div>
    </div>
  </main>
</Layout>

<style>
  @import url("https://fonts.googleapis.com/css2?family=Unbounded:wght@200;300;400;500;600;700;800&display=swap");
  main {
    font-family: "Unbounded", sans-serif;
  }
</style>
